name: Build image for devcontainer
on:
  workflow_dispatch:
  # push:
  # schedule:
  #   - cron: "45 20 5,15,25 * *"

jobs:
  build_node:
    name: Build image
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Prepare tags for image
        id: prep
        run: |
          TAG_DATE="ghcr.io/${GITHUB_REPOSITORY}:$(date "+%Y-%m-%d")-$(echo "${GITHUB_REF}" | sed -e 's/refs\/heads\///; s/\//-/g')"
          echo "::set-output name=tag_date::${TAG_DATE}"

      - name: Prepare tags for image(basic)
        id: prep_basic
        run: |
          TAG1="${TAG_DATE}-basic"
          TAG2="ghcr.io/${GITHUB_REPOSITORY}:basic"
          test "${GITHUB_REF}" = "refs/heads/main" \
            && TAGS="${TAG1}%0A${TAG2}" \
            || TAGS="${TAG1}"
          echo "::set-output name=tags::${TAGS}"
        env:
          TAG_DATE: ${{ steps.prep.outputs.tag_date }}

      - name: Push Image(basic) to GitHub Container Registry
        id: push_image_basic
        uses: docker/build-push-action@v6
        with:
          context: ./containers/basic/image
          build-args: |
            GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}
          push: true
          tags: ${{ steps.prep_basic.outputs.tags }}
          # https://github.com/docker/build-push-action/issues/286#issuecomment-892900431
          cache-from: |
            type=gha,scope=basic
          cache-to: |
            type=gha,scope=basic,mode=max
          target: basic

      - name: Prepare tags for image(docker in docker)
        id: prep_dind
        run: |
          TAG1="${TAG_DATE}-dind"
          TAG2="ghcr.io/${GITHUB_REPOSITORY}:dind"
          test "${GITHUB_REF}" = "refs/heads/main" \
            && TAGS="${TAG1}%0A${TAG2}" \
            || TAGS="${TAG1}"
          echo "::set-output name=tags::${TAGS}"
        env:
          TAG_DATE: ${{ steps.prep.outputs.tag_date }}

      - name: Push Image(dind) to GitHub Container Registry
        id: push_image_dind
        uses: docker/build-push-action@v6
        with:
          context: ./containers/dind/image
          build-args: |
            BASIC_IMAGE=ghcr.io/${{ github.repository }}@${{ steps.push_image_basic.outputs.digest}}
          push: true
          tags: ${{ steps.prep_dind.outputs.tags }}
          cache-from: |
            type=gha,scope=dind
            type=gha,scope=basic
          cache-to: |
            type=gha,scope=dind,mode=max
          target: dind

      - name: Prepare tags for image(node)
        id: prep_node
        run: |
          TAG1="${TAG_DATE}-node"
          TAG2="ghcr.io/${GITHUB_REPOSITORY}:node"
          test "${GITHUB_REF}" = "refs/heads/main" \
            && TAGS="${TAG1}%0A${TAG2}" \
            || TAGS="${TAG1}"
          echo "::set-output name=tags::${TAGS}"
        env:
          TAG_DATE: ${{ steps.prep.outputs.tag_date }}

      - name: Push Image(node) to GitHub Container Registry
        id: push_image_node
        uses: docker/build-push-action@v6
        with:
          context: ./containers/node/image
          build-args: |
            BASIC_IMAGE=ghcr.io/${{ github.repository }}@${{ steps.push_image_dind.outputs.digest}}
          push: true
          tags: ${{ steps.prep_node.outputs.tags }}
          cache-from: |
            type=gha,scope=node
            type=gha,scope=basic
          cache-to: |
            type=gha,scope=node,mode=max
          target: node

      - name: Prepare tags for image(clasp)
        id: prep_clasp
        run: |
          TAG1="${TAG_DATE}-clasp"
          TAG2="ghcr.io/${GITHUB_REPOSITORY}:clasp"
          test "${GITHUB_REF}" = "refs/heads/main" \
            && TAGS="${TAG1}%0A${TAG2}" \
            || TAGS="${TAG1}"
          echo "::set-output name=tags::${TAGS}"
        env:
          TAG_DATE: ${{ steps.prep.outputs.tag_date }}

      - name: Push Image(clasp) to GitHub Container Registry
        id: push_image_clasp
        uses: docker/build-push-action@v6
        with:
          context: ./containers/clasp/image
          build-args: |
            BASIC_IMAGE=ghcr.io/${{ github.repository }}@${{ steps.push_image_node.outputs.digest}}
          push: true
          tags: ${{ steps.prep_clasp.outputs.tags }}
          cache-from: |
            type=gha,scope=clasp
            type=gha,scope=basic
          cache-to: |
            type=gha,scope=clasp,mode=max
          target: clasp

      - name: Prepare tags for image(rust)
        id: prep_rust
        run: |
          TAG1="${TAG_DATE}-rust"
          TAG2="ghcr.io/${GITHUB_REPOSITORY}:rust"
          test "${GITHUB_REF}" = "refs/heads/main" \
            && TAGS="${TAG1}%0A${TAG2}" \
            || TAGS="${TAG1}"
          echo "::set-output name=tags::${TAGS}"
        env:
          TAG_DATE: ${{ steps.prep.outputs.tag_date }}

      - name: Push Image(rust) to GitHub Container Registry
        id: push_image_rust
        uses: docker/build-push-action@v6
        with:
          context: ./containers/rust/image
          build-args: |
            BASIC_IMAGE=ghcr.io/${{ github.repository }}@${{ steps.push_image_dind.outputs.digest}}
          push: true
          tags: ${{ steps.prep_rust.outputs.tags }}
          cache-from: |
            type=gha,scope=rust
            type=gha,scope=basic
          cache-to: |
            type=gha,scope=rust,mode=max
          target: rust

      - name: Prepare tags for image(cli-rust)
        id: prep_cli_rust
        run: |
          TAG1="${TAG_DATE}-cli_rust"
          TAG2="ghcr.io/${GITHUB_REPOSITORY}:cli_rust"
          test "${GITHUB_REF}" = "refs/heads/main" \
            && TAGS="${TAG1}%0A${TAG2}" \
            || TAGS="${TAG1}"
          echo "::set-output name=tags::${TAGS}"
        env:
          TAG_DATE: ${{ steps.prep.outputs.tag_date }}

      - name: Push Image(cli_rust) to GitHub Container Registry
        id: push_image_cli_rust
        uses: docker/build-push-action@v6
        with:
          context: ./containers/cli-rust/image
          #build-args: |
          #  BASIC_IMAGE=ghcr.io/${{ github.repository }}@${{ steps.push_image_dind.outputs.digest}}
          push: true
          tags: ${{ steps.prep_cli_rust.outputs.tags }}
          cache-from: |
            type=gha,scope=cli_rust
            type=gha,scope=basic
          cache-to: |
            type=gha,scope=cli_rust,mode=max
          target: cli_rust

      - name: Prepare tags for image(python)
        id: prep_python
        run: |
          TAG1="${TAG_DATE}-python"
          TAG2="ghcr.io/${GITHUB_REPOSITORY}:python"
          test "${GITHUB_REF}" = "refs/heads/main" \
            && TAGS="${TAG1}%0A${TAG2}" \
            || TAGS="${TAG1}"
          echo "::set-output name=tags::${TAGS}"
        env:
          TAG_DATE: ${{ steps.prep.outputs.tag_date }}

      - name: Push Image(python) to GitHub Container Registry
        id: push_image_python
        uses: docker/build-push-action@v6
        with:
          context: ./containers/python/image
          build-args: |
            BASIC_IMAGE=ghcr.io/${{ github.repository }}@${{ steps.push_image_dind.outputs.digest}}
          push: true
          tags: ${{ steps.prep_python.outputs.tags }}
          cache-from: |
            type=gha,scope=python
            type=gha,scope=basic
          cache-to: |
            type=gha,scope=python,mode=max
          target: python

      - name: Prepare tags for image(gcloud-pubsub-emu)
        id: prep_gcloud-pubsub-emu
        run: |
          TAG1="${TAG_DATE}-gcloud-pubsub-emu"
          TAG2="ghcr.io/${GITHUB_REPOSITORY}:gcloud-pubsub-emu"
          test "${GITHUB_REF}" = "refs/heads/main" \
            && TAGS="${TAG1}%0A${TAG2}" \
            || TAGS="${TAG1}"
          echo "::set-output name=tags::${TAGS}"
        env:
          TAG_DATE: ${{ steps.prep.outputs.tag_date }}

      - name: Push Image(gcloud-pubsub-emu) to GitHub Container Registry
        id: push_image_gcloud-pubsub-emu
        uses: docker/build-push-action@v6
        with:
          context: ./containers/gcloud-pubsub-emu/image
          build-args: |
            BASIC_IMAGE=ghcr.io/${{ github.repository }}@${{ steps.push_image_dind.outputs.digest}}
          push: true
          tags: ${{ steps.prep_gcloud-pubsub-emu.outputs.tags }}
          cache-from: |
            type=gha,scope=gcloud-pubsub-emu
            type=gha,scope=basic
          cache-to: |
            type=gha,scope=gcloud-pubsub-emu,mode=max
          target: gcloud-pubsub-emu
